# Generated by Django 4.2.19 on 2025-05-24 14:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('AudioXApp', '0003_user_is_banned_by_admin_user_platform_ban_reason_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticket_display_id', models.CharField(editable=False, help_text='User-friendly ticket ID, e.g., AXT-1001', max_length=20, unique=True)),
                ('subject', models.CharField(max_length=255, verbose_name='Subject')),
                ('description', models.TextField(verbose_name='Description')),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('PROCESSING', 'Processing'), ('AWAITING_USER', 'Awaiting User Response'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed'), ('REOPENED', 'Reopened')], default='OPEN', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='Timestamp when the ticket was first marked as resolved.', null=True, verbose_name='Resolved At')),
                ('closed_at', models.DateTimeField(blank=True, help_text='Timestamp when the ticket was finally closed (e.g., after a resolved period).', null=True, verbose_name='Closed At')),
                ('assigned_admin_identifier', models.CharField(blank=True, help_text='Identifier (e.g., username or ID) of the admin handling the ticket from your custom Admin system.', max_length=255, null=True, verbose_name='Assigned Admin Identifier')),
            ],
            options={
                'verbose_name': 'Support Ticket',
                'verbose_name_plural': 'Support Tickets',
                'db_table': 'SUPPORT_TICKETS',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_creator_specific', models.BooleanField(default=False, help_text='Is this category primarily for creators?')),
            ],
            options={
                'verbose_name': 'Ticket Category',
                'verbose_name_plural': 'Ticket Categories',
                'db_table': 'TICKET_CATEGORIES',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TicketMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField(verbose_name='Message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('is_admin_reply', models.BooleanField(default=False, help_text='True if this message is from an admin/support agent.', verbose_name='Is Admin Reply')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='AudioXApp.ticket', verbose_name='Ticket')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_messages', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Support Ticket Message',
                'verbose_name_plural': 'Support Ticket Messages',
                'db_table': 'SUPPORT_TICKET_MESSAGES',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='ticket',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='AudioXApp.ticketcategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='creator_profile',
            field=models.ForeignKey(blank=True, help_text='Associated creator profile, if the user is a creator and the issue is creator-specific.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creator_support_tickets', to='AudioXApp.creator', verbose_name='Creator Profile'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
    ]
