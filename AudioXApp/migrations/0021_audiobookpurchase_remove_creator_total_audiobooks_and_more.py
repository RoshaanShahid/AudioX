# Generated by Django 4.2.19 on 2025-05-06 14:35

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('AudioXApp', '0020_subscription_stripe_payment_method_brand_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AudiobookPurchase',
            fields=[
                ('purchase_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('purchase_date', models.DateTimeField(auto_now_add=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, help_text='Total amount paid by the user in PKR.', max_digits=10)),
                ('platform_fee_percentage', models.DecimalField(decimal_places=2, default=Decimal('10.00'), help_text='Platform fee percentage at the time of purchase.', max_digits=5)),
                ('platform_fee_amount', models.DecimalField(decimal_places=2, help_text='Calculated platform fee in PKR.', max_digits=10)),
                ('creator_share_amount', models.DecimalField(decimal_places=2, help_text='Amount credited to the creator in PKR.', max_digits=10)),
                ('stripe_checkout_session_id', models.CharField(blank=True, db_index=True, help_text='Stripe Checkout Session ID for reference.', max_length=255, null=True)),
                ('stripe_payment_intent_id', models.CharField(blank=True, db_index=True, help_text='Stripe Payment Intent ID for reference.', max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Audiobook Purchase',
                'verbose_name_plural': 'Audiobook Purchases',
                'db_table': 'AUDIOBOOK_PURCHASES',
                'ordering': ['-purchase_date'],
            },
        ),
        migrations.RemoveField(
            model_name='creator',
            name='total_audiobooks',
        ),
        migrations.AddField(
            model_name='audiobook',
            name='total_revenue_generated',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Total gross revenue generated by this audiobook before platform fees.', max_digits=12),
        ),
        migrations.AddField(
            model_name='audiobook',
            name='total_sales',
            field=models.PositiveIntegerField(default=0, help_text='Number of times this audiobook has been sold.'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='is_preview_eligible',
            field=models.BooleanField(default=False, help_text='Can this chapter be previewed by premium users if the book is paid but not purchased?'),
        ),
        migrations.AlterField(
            model_name='creator',
            name='available_balance',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Net earnings available for withdrawal after platform fees.', max_digits=12),
        ),
        migrations.AlterField(
            model_name='creator',
            name='total_earning',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Total gross earnings from sales before platform fees.', max_digits=12),
        ),
        migrations.AlterField(
            model_name='withdrawalrequest',
            name='processed_by',
            field=models.ForeignKey(blank=True, help_text='Admin who last updated the status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_withdrawals', to='AudioXApp.admin'),
        ),
        migrations.CreateModel(
            name='CreatorEarning',
            fields=[
                ('earning_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount_earned', models.DecimalField(decimal_places=2, help_text='Net amount earned by the creator for this sale.', max_digits=10)),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, help_text="Any notes related to this earning (e.g., 'From audiobook sale').", null=True)),
                ('audiobook', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_earnings', to='AudioXApp.audiobook')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings_log', to='AudioXApp.creator')),
                ('purchase', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='earning_record', to='AudioXApp.audiobookpurchase')),
            ],
            options={
                'verbose_name': 'Creator Earning',
                'verbose_name_plural': 'Creator Earnings',
                'db_table': 'CREATOR_EARNINGS',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.AddField(
            model_name='audiobookpurchase',
            name='audiobook',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='AudioXApp.audiobook'),
        ),
        migrations.AddField(
            model_name='audiobookpurchase',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audiobook_purchases', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='purchased_audiobooks',
            field=models.ManyToManyField(related_name='purchased_by_users', through='AudioXApp.AudiobookPurchase', to='AudioXApp.audiobook'),
        ),
        migrations.AlterUniqueTogether(
            name='audiobookpurchase',
            unique_together={('user', 'audiobook')},
        ),
    ]
