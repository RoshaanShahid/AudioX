# Generated by Django 4.2.19 on 2025-04-29 09:50

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('AudioXApp', '0002_creator_creator_name_creator_creator_unique_name_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='admin',
            options={'verbose_name': 'Custom Administrator', 'verbose_name_plural': 'Custom Administrators'},
        ),
        migrations.RemoveField(
            model_name='admin',
            name='groups',
        ),
        migrations.RemoveField(
            model_name='admin',
            name='is_staff',
        ),
        migrations.RemoveField(
            model_name='admin',
            name='is_superuser',
        ),
        migrations.RemoveField(
            model_name='admin',
            name='user_permissions',
        ),
        migrations.AlterField(
            model_name='admin',
            name='roles',
            field=models.CharField(help_text='Comma-separated list of roles (e.g., full_access,manage_content)', max_length=255),
        ),
        migrations.AlterField(
            model_name='creator',
            name='creator_name',
            field=models.CharField(default=1, help_text='The public display name for the creator (e.g., studio name or full name).', max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='creator',
            name='creator_unique_name',
            field=models.CharField(default=1, help_text='The unique handle for the creator (@yourname). Letters, numbers, and underscores only.', max_length=50, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_creator_unique_name', message='Unique name can only contain letters, numbers, and underscores.', regex='^[a-zA-Z0-9_]+$')]),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
