services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: audiox_postgres
    environment:
      POSTGRES_DB: audiox_db
      POSTGRES_USER: audiox_user
      POSTGRES_PASSWORD: audiox_secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - audiox_network
    restart: unless-stopped

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: audiox_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - audiox_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Django Web Application
  web:
    build: .
    container_name: audiox_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles_collected
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=AudioXCore.settings
    depends_on:
      - db
      - redis
    networks:
      - audiox_network
    restart: unless-stopped

  # Celery Worker
  celery:
    build: .
    container_name: audiox_celery
    command: celery -A AudioXCore worker --loglevel=info
    volumes:
      - .:/app
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - audiox_network
    restart: unless-stopped

  # Celery Beat Scheduler
  celery-beat:
    build: .
    container_name: audiox_celery_beat
    command: celery -A AudioXCore beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - audiox_network
    restart: unless-stopped

  # Nginx (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: audiox_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles_collected
      - media_volume:/app/media
    depends_on:
      - web
    networks:
      - audiox_network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  audiox_network:
    driver: bridge 